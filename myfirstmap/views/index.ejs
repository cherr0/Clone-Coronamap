<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>My first map</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=10jnoot7f3"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
</head>
<body>
<div id="navbar">myfirstmap</div>
<div id="infoBox">
    <div id="infoTitle">현재날짜</div>
    <div id="infoContent">2021.03.08</div>
</div>
<div id="search">
    <input type="text" id="search_input" placeholder="목적을 입력해주세요" />
    <button id="search_button">검색</button>
</div>
<div id="current">현재 위치</div>
<div id="map" style="width:100%;height:100vh;"></div>


<script type="text/javascript" src="/data/data.js"></script>
<script>
const mapOptions = {
    center: new naver.maps.LatLng(37.3595704, 127.105399),
    zoom: 10
};

const map = new naver.maps.Map('map', mapOptions);

const markerList = [];
const infowindowlist = [];

for (let i in data) {
    let target = data[i];
    let latlng = new naver.maps.LatLng(target.lat, target.lng);
    marker = new naver.maps.Marker({
        map: map,
        position: latlng,
        icon: {
            content: "<div class='marker'></div>",
            anchor: new naver.maps.Point(12,12)
        }
    });

    const content = `<div class='infowindow_wrap'>
        <div class='infowindow_title'>${target.title}</div>
        <div class='infowindow_content'>${target.content}</div>
        <div class='infowindow_date'>${target.date}</div>
        </div>`;

    const infowindow = new naver.maps.InfoWindow({
        content: content,
        backgroundColor: "#00ff0000",
        borderColor: "#00ff0000",
        anchorSize: new naver.maps.Size(0,0)
    });


    markerList.push(marker);
    infowindowlist.push(infowindow);
}

for(let i=0 ; i < markerList.length ; i++) {
    naver.maps.Event.addListener(map,"click",ClickMap(i));  // 맵을 클릭했을때 ClickMap 이 호출됨
    naver.maps.Event.addListener(markerList[i], "click", getClickHandler(i));
}


// 맵의 마커가 아닌 다른 곳이 클릭 될 경우 infoWindow가 열린 것을 찾은 뒤 닫아준다.
function ClickMap(i){
    return function () {
        const infowindow = infowindowlist[i];
        infowindow.close();
    }
}


// 마커와 infowindow들을 찾아서 리스트에 등록하고 infowindow가 있으면 닫아준다.
// 만약 활성화 된 창이 없다면 해당 마커의 infowindow를 활성화한다. 
function getClickHandler(i) {
    return function () {
        const marker = markerList[i];
        const infowindow = infowindowlist[i];
        if(infowindow.getMap()) {
            infowindow.close();
        
        }else {
            infowindow.open(map, marker);
        }
    }
}

// 현재 위치 마커 최초 1회만 실행되도록 설정
let currentUse = true;

$("#current").click(() => {
    if("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(function (position) {
            const lat = position.coords.latitude;   // 현재 위치 위도값
            const lng = position.coords.longitude;  // 현재 위치 경도값
            const latlng = new naver.maps.LatLng(lat,lng);  // 위도, 경도값 받아오기
            if (currentUse) {
                marker = new naver.maps.Marker({
                    map: map,
                    position: latlng,
                    icon: { // 커스텀 아이콘으로 변경
                        content: '<img class="pulse" draggable="false" unselectable="on" src="https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png">',
                        anchor: new naver.maps.Point(11,11)
                    }
                });
                currentUse = false;
            }
            

            // 현재 위치가 찍혀질 경우 화면이 이동됨
            map.setZoom(14,false);
            map.panTo(latlng);
        });
    }else {
        alert('위치 정보 사용 불가능');
    }
})
</script>
</body>
</html>